openapi: 3.0.0
info:
  title: Admin Simple API
  version: 1.0.0
servers:
  - url: http://localhost:8000
    description: Local development server
  - url: https://api.admin-simple.com
    description: Production server
paths:
  /users:
    get:
      tags:
        - users
      summary: Get all users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /login:
    post:
      tags:
        - auth
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: The user's email address
                password:
                  type: string
                  format: password
                  description: The user's password
              required:
                - email
                - password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The error message
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: The error message
  /products:
    get:
      tags:
        - products
      summary: Get all products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the user
        name:
          type: string
          description: The name of the user
        email:
          type: string
          format: email
          description: The email address of the user
        address:
          type: object
          properties:
            street:
              type: string
              description: The street of the user
            city:
              type: string
              description: The city of the user
            state:
              type: string
              description: The state of the user
            zip:
              type: string
              description: The zip code of the user
            country:
              type: string
              description: The country of the user
        phone:
          type: string
          description: The phone number of the user
        website:
          type: string
          description: The website of the user
        gender:
          type: string
          enum:
            - male
            - female
            - other
          description: The gender of the user
        role:
          type: string
          enum:
            - admin
            - user
          description: The role of the user
        status:
          type: string
          enum:
            - active
            - inactive
            - pending
          description: The status of the user
        createdAt:
          type: string
          format: date-time
          description: The date and time the user was created
    Product:
      type: object
      required:
        - id
        - name
        - description
        - price
        - status
        - category
        - image
        - stock
        - brand
        - tags
        - attributes
        - createdAt
      properties:
        id:
          type: string
          format: uuid
          description: The unique identifier for the product
        name:
          type: string
          description: The name of the product
        description:
          type: string
          description: The description of the product
        price:
          type: number
          description: The price of the product
        status:
          type: string
          enum:
            - active
            - inactive
            - pending
          description: The status of the product
        category:
          type: string
          description: The category of the product
        image:
          type: string
          description: The image of the product
        stock:
          type: number
          description: The stock of the product
        brand:
          type: string
          description: The brand of the product
        tags:
          type: array
          items:
            type: string
          description: The tags of the product
        attributes:
          type: object
          properties:
            color:
              type: string
              description: The color of the product
            size:
              type: string
              description: The size of the product
            weight:
              type: number
              description: The weight of the product
            dimensions:
              type: object
              properties:
                length:
                  type: number
                width:
                  type: number
                height:
                  type: number
        createdAt:
          type: string
          format: date-time
          description: The date and time the product was created
